@page "/Mini1P/{InstanceKey?}"
@inject StateManager StateManager
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject NavigationManager Nav
@inject ILogger<Page> Logger
@inject ApplicationEventRelay Relay
@implements IDisposable


<h3>Page</h3>

@code {
	[CascadingParameter] public ApplicationUser? CurrentUser { get; set; }

	[Parameter] public string? InstanceKey { get; set; }

	protected override void OnInitialized()
	{
		Relay.StateChanged += OnGameStateChanged;
	}

	private async void OnGameStateChanged(object? sender, StateChangeEventArgs e)
	{
		if (e.InstanceId != StateManager.InstanceId) return;
		if (e.ToPlayer != CurrentUser?.UserName) return;
		StateManager.Update(e.Json);
		await InvokeAsync(StateHasChanged);
	}

	public void Dispose()
	{
		Relay.StateChanged -= OnGameStateChanged;
	}
}
